;;; Compiled snippets and support files for `snippets'
;;; Snippet definitions:
;;;
(yas-define-snippets 'snippets
                     '(("us" "SET ANSI_NULLS ON;\nSET QUOTED_IDENTIFIER ON;\n\nIF NOT EXISTS (\n    SELECT * FROM sys.objects\n    WHERE object_id = OBJECT_ID('dbo.$0$1')\n    AND type='P'\n)\nBEGIN\n    EXEC (N'CREATE PROCEDURE [dbo].[$1] AS RETURN 0;');\nEND;\n\nALTER PROCEDURE [dbo].[$1]\n    @MemberID BIGINT\n    ,@EnterpriseID BIGINT\n    ,@ApplicationID UNIQUEIDENTIFIER\n    ,@IsActive BIT\nAS\n    SET NOCOUNT ON;\n    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\n\n    IF EXISTS(\n            SELECT *\n            FROM [dbo].[$2]\n            WHERE [MemberID] = @MemberID)\n        BEGIN\n            UPDATE [dbo].[$2]\n            SET [ModifiedDateUTC] = GETUTCDATE()\n            WHERE \n        END;\n    ELSE\n        BEGIN\n            INSERT INTO [dbo].[$2]\n                ([$3]\n                ,[$4]\n                ,[$5]\n                ,[$6])\n            VALUES\n                (@$3\n                ,@$4\n                ,@$5\n                ,@$6)\n            GO\n        END;\n\n    IF @@ROWCOUNT = 0\n        BEGIN\n            RETURN -1;\n        END\n    ELSE\n        BEGIN\n            RETURN 1;\n        END\n\n/*####################################################################\n$$Author:       `user-full-name`\n$$Purpose:      create $1 table\n$$Modified:     `(format-time-string \"%Y-%m-%d\")` `user-full-name` created\n######################################################################*/" "upsert-sproc" nil nil nil "/Users/nboyd/.emacs.d/snippets/sql-mode/upsert-sproc" nil nil)
                       ("ct" "SET ANSI_NULLS ON\nSET QUOTED_IDENTIFIER ON\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.procedures WHERE object_id = OBJECT_ID(N'dbo.$1'))\nBEGIN\n    DECLARE @Sql nvarchar(4000);\n    SET @Sql = 'CREATE PROCEDURE [dbo].[$1] AS RETURN 0';\n    EXEC (@Sql);\nEND\nGO\n\nALTER PROCEDURE [dbo].[$1](\n    $0/* params */\nAS\nBEGIN\n    SET NOCOUNT ON;\n    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\n\n    SELECT\n        /* params */\n    FROM [dbo].[$2]\n    WHERE \n        /* clause */\nEND;\n\n/*####################################################################\n$$Author:       `user-full-name`\n$$Purpose:      create $1 sproc\n$$Modified:     `(format-time-string \"%Y-%m-%d\")` `user-full-name` created\n######################################################################*/\nGO" "select-sproc" nil nil nil "/Users/nboyd/.emacs.d/snippets/sql-mode/select-sproc" nil nil)
                       ("references" "REFERENCES ${1:TableName}([${2:ColumnName}])\n" "REFERENCES ..." nil nil nil "/Users/nboyd/.emacs.d/snippets/sql-mode/references" nil nil)
                       ("ins" "INSERT INTO ${table-name} (${col1, col2}) VALUES (${'val1', 'val2'});$0" "insert" nil nil nil "/Users/nboyd/.emacs.d/snippets/sql-mode/insert" nil nil)
                       ("create.1" "CREATE PROCEDURE [${1:dbo}].[${2:Name}] \n(\n		$3		$4		= ${5:NULL}		${6:OUTPUT}\n)\nAS\nBEGIN\n$0\nEND\nGO\n" "create procedure ..." nil nil nil "/Users/nboyd/.emacs.d/snippets/sql-mode/create.1" nil nil)
                       ("ct" "SET ANSI_NULLS ON\nSET QUOTED_IDENTIFIER ON\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.tables WHERE [object_id] = OBJECT_ID('dbo.$1') AND [type] = 'U')\nBEGIN\n    CREATE TABLE [dbo].[$1] (\n        ${2:Id} ${3:INT} ${4:NOT NULL}\n$0\n        CreatedDateUTC DATETIME NOT NULL CONSTRAINT DF_$1_CreatedDateUTC DEFAULT(GETUTCDATE()),\n        ModifiedDateUTC DATETIME NOT NULL CONSTRAINT DF_$1_ModifiedDateUTC DEFAULT(GETUTCDATE()),\n        CONSTRAINT PK_$2 PRIMARY KEY CLUSTERED ($2)\n    ) WITH (DATA_COMPRESSION = PAGE);\nEND;\nGO\n\n/*####################################################################\n$$Author:       `user-full-name`\n$$Purpose:      create $1 table\n$$Modified:     `(format-time-string \"%Y-%m-%d\")` `user-full-name` created\n######################################################################*/" "create-table" nil nil nil "/Users/nboyd/.emacs.d/snippets/sql-mode/create-table" nil nil)
                       ("create" "CREATE TABLE [${1:dbo}].[${2:TableName}] \n(\n		${3:Id}		${4:INT IDENTITY(1,1)}		${5:NOT NULL}\n$0\n	CONSTRAINT [${6:PK_}] PRIMARY KEY ${7:CLUSTERED} ([$3]) \n)\nGO\n" "create table ..." nil nil nil "/Users/nboyd/.emacs.d/snippets/sql-mode/create" nil nil)
                       ("constraint.1" "CONSTRAINT [${1:FK_Name}] FOREIGN KEY ${2:CLUSTERED} ([${3:ColumnName}]) \n" "CONSTRAINT [..] FOREIGN KEY ..." nil nil nil "/Users/nboyd/.emacs.d/snippets/sql-mode/constraint.1" nil nil)
                       ("constraint" "CONSTRAINT [${1:PK_Name}] PRIMARY KEY ${2:CLUSTERED} ([${3:ColumnName}]) \n" "CONSTRAINT [..] PRIMARY KEY ..." nil nil nil "/Users/nboyd/.emacs.d/snippets/sql-mode/constraint" nil nil)
                       ("column" "	,	${1:Name}		${2:Type}			${3:NOT NULL}\n" ", ColumnName ColumnType NOT NULL..." nil nil nil "/Users/nboyd/.emacs.d/snippets/sql-mode/column" nil nil)))


;;; Do not edit! File generated at Tue Apr 18 09:27:19 2017
